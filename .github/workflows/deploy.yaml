name: Deploy
on:
  repository_dispatch:
    types: deploy
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'

jobs:
  build-and-deploy:
    name: "Build and deploy the code"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Yarn deps for frontend
        run: yarn install
        working-directory: ./frontend

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: 'latest'

      - name: Build frontend
        run: yarn build
        working-directory: ./frontend

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Rust code
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: scp compiled executable to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_DEPLOY_HOST }}
          username: ${{ secrets.GCP_DEPLOY_USERNAME }}
          passphrase: ${{ secrets.GCP_DEPLOY_SSH_PASSPHRASE }}
          key: ${{ secrets.GCP_DEPLOY_SSH_KEY }}
          source: target/release/shengji
          target: /home/${{ secrets.GCP_DEPLOY_USERNAME }}/deployed

      - name: swap to new executable
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_DEPLOY_HOST }}
          username: ${{ secrets.GCP_DEPLOY_USERNAME }}
          passphrase: ${{ secrets.GCP_DEPLOY_SSH_PASSPHRASE }}
          key: ${{ secrets.GCP_DEPLOY_SSH_KEY }}
          script: /home/${{ secrets.GCP_DEPLOY_USERNAME }}/swap.sh
